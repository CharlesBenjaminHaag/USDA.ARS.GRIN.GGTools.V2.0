@model USDA.ARS.GRIN.GGTools.Taxonomy.ViewModelLayer.GenusViewModel
@{
    ViewBag.Title = Model.PageTitle;
    Layout = "~/Views/Shared/_LayoutAdminLTE3.cshtml";
}
@Html.Partial("~/Views/Shared/_RevisionHistory.cshtml")
@using (Html.BeginForm("Edit", "Genus", FormMethod.Post, new { id = "frmEdit" }))
{
    @Html.HiddenFor(x => x.PageTitle)
    @Html.HiddenFor(x => x.EventAction)
    @Html.HiddenFor(x => x.EventValue)
    @Html.HiddenFor(x => x.TableName)
    @Html.HiddenFor(x => x.TableCode)
    @Html.HiddenFor(x => x.Entity.ID)
    @Html.HiddenFor(x => x.IsTypeGenus)
    @Html.HiddenFor(x => x.Entity.Rank)
    @Html.HiddenFor(x => x.Entity.IsAcceptedName)
    <input id="hfCurrentAction" type="hidden" />
    <input id="hfCurrentValue" type="hidden" />
    <div class="card card-default">
        <div class="card-header">
            <div class="btn-group">
                <a id="btnSetAcceptedOn" class="btn btn-default btn-sm" href="#" role="button"><i class="fas fa-thumbs-down"></i> Not Accepted</a>
                <a id="btnSetAcceptedOff" class="btn btn-default btn-sm" href="#" role="button"><i class="fas fa-thumbs-up"></i> Accepted</a>
            </div>
            <div class="btn-group">
                <button type="button" class="btn btn-default btn-sm pull-right" data-toggle="modal" data-target="#modal-note-lookup">
                    <i class="fa fa-search margin-r-5"></i>
                    Notes
                </button>
            </div>
            @if (Model.Entity.ID > 0)
            {
                <div class="btn-group">
                    <a class="btn btn-default btn-sm" href="@Url.Action("Add", "Genus", new { @rank = "subgenus" })">Add Subgenus</a>
                    <button type="button" class="btn btn-default btn-sm dropdown-toggle dropdown-icon" data-toggle="dropdown" aria-expanded="false">
                        <span class="sr-only">Toggle Dropdown</span>
                    </button>
                    <div class="dropdown-menu" role="menu" style="">
                        <a class="dropdown-item btn-sm" href="@Url.Action("Add", "Genus", new { @rank = "section" })">Section</a>
                        <a class="dropdown-item btn-sm" href="@Url.Action("Add", "Genus", new { @rank = "subsection" })">Subection</a>
                    </div>
                </div>
                <div class="btn-group">
                    <a class="btn btn-default btn-sm" href="@Url.Action("Add","Species", new { @genusId = Model.Entity.ID,  @rank = "species"  })">Add Species</a>
                </div>
                <div class="btn-group">
                    <a href="@Url.Action("Add","CommonName", new { genusId = Model.Entity.ID })" class="btn btn-default btn-sm">Add Common Name</a>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-default btn-sm" data-toggle="modal" data-target="#modal-citation-lookup">
                        <i class="fa fa-book"></i>
                    </button>
                </div>
            }
            <a href="https://npgsdev.ars-grin.gov/gringlobal/taxon/taxonomygenus?id=@Model.Entity.ID" target="_blank" class="btn btn-info btn-sm float-right">
                <i class="fa fa-globe"></i>
                View Public Website
            </a>
        </div>
        <div class="card-body">
            @Html.Partial("~/Views/Shared/_ValidationMessages.cshtml")
            <div class="row accepted">
                <div id="section-accepted-name" class="col-md-3 accepted">
                    <div class="form-group">
                        <label>Accepted Name</label>
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.Entity.AcceptedName, new { @class = "form-control" })
                            @Html.HiddenFor(x => x.Entity.AcceptedID)

                            @if (Model.Entity.ID > 0)
                            {
                                <span class="input-group-btn">
                                    <a href="@Url.Action("Edit", "Genus", new { @entityId = Model.Entity.AcceptedID })" class="btn btn-default btn-flat">
                                        <i class="fa fa-link"></i>
                                    </a>
                                </span>
                            }
                            <span class="input-group-btn">
                                <button type="button" class="btn btn-default btn-flat" data-toggle="modal" data-target="#modal-genus-lookup">
                                    <i class="fa fa-search"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Family</label>
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.Entity.FamilyName, new { @class = "form-control", @readonly = "readonly", @style = "background-color:#ecf0f5;" })
                            @Html.HiddenFor(x => x.Entity.FamilyID)

                            @if (Model.Entity.FamilyID > 0)
                            {
                                <span class="input-group-btn">
                                    <a href="@Url.Action("Edit", "FamilyMap", new { @entityId = Model.Entity.FamilyID })" class="btn btn-default btn-flat">
                                        <i class="fa fa-link"></i>
                                    </a>
                                </span>
                            }

                            <span class="input-group-btn">
                                <button type="button" class="btn btn-default btn-flat" data-toggle="modal" data-target="#modal-family-lookup">
                                    <i class="fa fa-search"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Genus Name</label>
                        @Html.TextBoxFor(x => x.Entity.Name, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Qualifying Code</label>
                        @Html.DropDownListFor(x => x.Entity.QualifyingCode, Model.QualifyingCodes, "NULL", new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Hybrid Code</label>
                        @Html.DropDownListFor(x => x.Entity.HybridCode, Model.HybridCodes, "NULL", new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Authority</label>
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.Entity.Authority, new { @class = "form-control" })
                            <span class="input-group-btn">
                                <button type="button" data-toggle="modal" data-target="#modal-author-lookup" class="btn btn-default btn-flat">
                                    <i class="fa fa-search"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <label>Note</label>
                    @Html.TextAreaFor(x => x.Entity.Note, new { @id = "txtNote", @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="card-footer">
            <a href="@Url.Action("Refresh")" class="btn btn-warning">Cancel</a>
            @if (Model.Entity.ID > 0)
            {
                <button id="btnDelete" type="button" class="btn btn-danger">
                    Delete
                </button>
            }
            <button type="submit" class="btn btn-primary float-right">Save</button>
        </div>
    </div>
}

<div id="section-citations">

</div>

@{Html.RenderAction("RenderLookupModal", "Citation", new { isMultiSelect = "Y" }); }
@Html.Partial("~/Views/Taxonomy/Family/Modals/_Lookup.cshtml")

@if (Model.Entity.ID > 0)
{
    Html.RenderAction("_ListSynonyms", "Genus", new { @genusId = Model.Entity.ID });
    Html.RenderAction("_ListSubdivisions", "Genus", new { @genusName = Model.Entity.Name });
    { Html.RenderAction("_List", "CommonName", new { @genusId = Model.Entity.ID }); }
    //Html.RenderAction("_List", "Species", new { @genusId = Model.Entity.ID });
    //Html.RenderAction("_List", "Citation", new { @genusId = Model.Entity.ID });
    //{ Html.RenderAction("_ConspecificList", "Species", new { @eventValue = Model.EventValue, @entityId = Model.Entity.ID }); }
    //{ Html.RenderAction("_List", "CommonName", new { @eventValue = Model.EventValue, @entityId = Model.Entity.ID }); }
    //{ Html.RenderAction("_List", "EconomicUse", new { @entityId = Model.Entity.ID }); }
    //{ Html.RenderAction("_List", "GeographyMap", new { @entityId = Model.Entity.ID }); }
    //{ Html.RenderAction("_List", "RegulationMap", new { @speciesId = Model.Entity.ID }); }
    //{ Html.RenderAction("_List", "Citation", new { @speciesId = Model.Entity.ID }); }
}

@Html.Partial("~/Views/Taxonomy/Author/Modals/_Lookup.cshtml")
@Html.Partial("~/Views/Taxonomy/Family/Modals/_Lookup.cshtml")
@Html.Partial("~/Views/Shared/Modals/_NoteLookup2.cshtml")
@Html.Partial("~/Views/Taxonomy/Shared/Modals/_Delete.cshtml")
<script type="text/javascript">
    $(document).ready(function () {
        Init();
    });

    function Init() {
        SetControlVisibility();
    }
</script>
