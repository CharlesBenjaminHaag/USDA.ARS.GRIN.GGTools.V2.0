@model USDA.ARS.GRIN.GGTools.Taxonomy.ViewModelLayer.RegulationMapViewModel
@{
    ViewBag.Title = Model.PageTitle;
    Layout = "~/Views/Shared/_LayoutAdminLTE3.cshtml";
}

@using (Html.BeginForm("Edit", "RegulationMap", FormMethod.Post, new { id = "frmEdit" }))
{
    @Html.HiddenFor(x => x.EventAction)
    @Html.HiddenFor(x => x.EventValue)
    @Html.HiddenFor(x => x.TableName)
    @Html.HiddenFor(x => x.TableCode)
    @Html.HiddenFor(x => x.PageTitle)
    @Html.HiddenFor(x => x.Entity.ID)
    @Html.Partial("~/Views/Shared/_RevisionHistory.cshtml")
    <div class="card card-default">
        <div class="card-header">
            <h3 class="card-title">Summary</h3>
            <div class="card-tools">
                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                    <i class="fas fa-minus"></i>
                </button>
            </div>
        </div>
        <div class="card-body">
            @Html.Partial("~/Views/Shared/_ValidationMessages.cshtml")
            <div class="row">
                <div class="col-md-3">
                    <div id="form-group">
                        @if (Model.Entity.FamilyID > 0)
                        {
                            <label>Family</label>
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.Entity.FamilyName, new { @class = "form-control" })
                                @Html.HiddenFor(x => x.Entity.FamilyID)
                                <span class="input-group-btn">
                                    <button type="button" data-toggle="modal" data-target="#modal-family-lookup" class="btn btn-default btn-flat">
                                        <i class="fa fa-search"></i>
                                    </button>
                                </span>
                            </div>
                        }
                        else
                        {
                            if (Model.Entity.GenusID > 0)
                            {
                                <label>Genus</label>
                                <div class="input-group">
                                    @Html.TextBoxFor(x => x.Entity.GenusName, new { @class = "form-control" })
                                    @Html.HiddenFor(x => x.Entity.GenusID)
                                    <span class="input-group-btn">
                                        <button type="button" data-toggle="modal" data-target="#modal-genus-lookup" class="btn btn-default btn-flat">
                                            <i class="fa fa-search"></i>
                                        </button>
                                    </span>
                                </div>
                            }
                            else
                            {
                                <label>Species</label>
                                <div class="input-group">
                                    @Html.TextBoxFor(x => x.Entity.SpeciesName, new { @class = "form-control" })
                                    @Html.HiddenFor(x => x.Entity.SpeciesID)
                                    <span class="input-group-append">
                                        <button type="button" data-toggle="modal" data-target="#modal-species-lookup" class="btn btn-default btn-flat">
                                            <i class="fa fa-search"></i>
                                        </button>
                                    </span>
                                </div>
                            }
                        }
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Regulation</label>
                        @Html.DropDownListFor(x => x.Entity.RegulationID, Model.Regulations, "NULL", new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group clearfix" style="margin-top:40px;">
                        <div class="icheck-primary d-inline">
                            @Html.CheckBoxFor(x => x.Entity.IsExemptOption, new { @id = "cbxIsExempt" })
                            <label for="cbxIsExempt">
                                Exempt
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <!-- BEGIN NOTE FIELD -->
                <div class="col-md-12">
                    <div class="form-group">
                        <label class="margin-r-5">Note</label>
                        <div class="input-group">
                            <br />
                            @Html.TextAreaFor(x => x.Entity.Note, new { @id = "txtNote", @class = "form-control", })
                            <span class="input-group-append">
                                <button type="button" class="btn btn-default" data-toggle="modal" data-target="#modal-note-lookup">
                                    <i class="fa fa-search margin-r-5"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
                <!-- END NOTE FIELD-->
            </div>
        </div>
        <div class="card-footer">
            <a href="@Url.Action("Refresh")" class="btn btn-default">Reset</a>
            @if (Model.Entity.ID > 0)
            {
                <button id="btnDelete" type="button" class="btn btn-danger">
                    Delete
                </button>
            }
            <button type="submit" class="btn btn-primary float-right">Save</button>
        </div>
    </div>
}

@Html.Partial("~/Views/Shared/Modals/_NoteLookup2.cshtml")
@{Html.RenderAction("RenderLookupModal", "Genus");}
@{Html.RenderAction("RenderLookupModal", "Species");}
@Html.Partial("~/Views/Taxonomy/Shared/Modals/_Delete.cshtml")

<script>
    $(document).ready(function () {
        Init();
        /*InitializeCKEditor();*/
    });

    function Init() {
    }

   /*
    * ===================================================================================================
    * SPECIES MODAL
    * ===================================================================================================
    */

    $(document).on("click", "[id='btnLookupSpecies']", function () {
        var link = '@Url.Action("Lookup","Species")';
        SearchSpecies(link);
    });

    $(document).on("click", "[id='btnSaveSpecies']", function () {
        SaveSpecies();
    });

    function SaveSpecies() {
        var selectedItemIdList = GetSelectedEntityIDs("data-table-species-lookup");
        var selectedSpeciesNameList = GetSelectedEntityLabels("data-table-species-lookup");
        $("#Entity_SpeciesID").val(selectedItemIdList);
        $("#Entity_SpeciesName").val(selectedSpeciesNameList);
    }
</script>
