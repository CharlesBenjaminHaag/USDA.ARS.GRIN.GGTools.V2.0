@model USDA.ARS.GRIN.GGTools.ViewModelLayer.CooperatorViewModel
@{
    ViewBag.Title = Model.PageTitle;
    Layout = "~/Views/Shared/_LayoutAdminLTE3.cshtml";
}

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Edit", "Cooperator", FormMethod.Post, new { id = "frmEditCooperator" }))
        {
            <div class="card card-primary">
                <div class="card-header">
                    <h3 class="card-title">Add Cooperator</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body" style="display: block;">

                    @Html.HiddenFor(x => x.PageTitle)
                    @*@Html.HiddenFor(x => x.IsReadOnly)*@
                    @Html.HiddenFor(x => x.EventAction)
                    @Html.HiddenFor(x => x.EventValue)
                    @Html.HiddenFor(x => x.TableName)
                    @Html.HiddenFor(x => x.TableCode)
                    @Html.HiddenFor(x => x.Entity.ID)
                    @Html.HiddenFor(x => x.Entity.StatusCode)
                    @Html.Partial("~/Views/Shared/_ValidationMessages.cshtml")
                    @Html.Partial("~/Views/Shared/_RevisionHistory.cshtml")
                    <div class="row">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Salutation</label>
                                @Html.DropDownListFor(x => x.Entity.Salutation, Model.Salutations, "Select value", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="form-group">
                                <label>First Name</label>
                                @Html.TextBoxFor(x => x.Entity.FirstName, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="form-group">
                                <label>Last Name</label>
                                @Html.TextBoxFor(x => x.Entity.LastName, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Email</label>
                                @Html.TextBoxFor(x => x.Entity.EmailAddress, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Phone</label>
                                @Html.TextBoxFor(x => x.Entity.PrimaryPhone, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Job Title</label>
                                @Html.TextBoxFor(x => x.Entity.JobTitle, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Category</label>
                                @Html.DropDownListFor(x => x.Entity.CategoryCode, Model.Categories, "Select value", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-9">
                            <div class="form-group">
                                <label>Organization</label>
                                @Html.TextBoxFor(x => x.Entity.Organization, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Abbrev</label>
                                @Html.TextBoxFor(x => x.Entity.OrganizationAbbrev, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Site</label>
                                @Html.DropDownListFor(x => x.Entity.SiteID, Model.Sites, "Select site", new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Address</label>
                                @Html.TextBoxFor(x => x.Entity.AddressLine1, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                @Html.TextBoxFor(x => x.Entity.AddressLine2, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                @Html.TextBoxFor(x => x.Entity.AddressLine3, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>City</label>
                                @Html.TextBoxFor(x => x.Entity.City, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label>State/Geo</label>
                            @Html.DropDownListFor(x => x.Entity.GeographyID, Model.States, "Select state", new { @class = "form-control" })
                        </div>
                        <div class="col-md-3">
                            <label>Postal Code</label>
                            @Html.TextBoxFor(x => x.Entity.PostalIndex, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <button id="btnSaveCooperator" type="submit" class="btn btn-default float-right">Save Changes</button>
                </div>
            </div>
        }

        @if (Model.Entity.ID > 0)
        {
            using (Html.BeginForm("EditSysUser", "Cooperator", FormMethod.Post, new { id = "frmEditCooperator" }))
            {
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">Edit Sys User</h3>
                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label>User Name</label>
                                    @Html.TextBoxFor(x => x.Entity.SysUserName, new { @class = "form-control" })
                                </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Password</label>
                                        @Html.TextBoxFor(x => x.Entity.SysUserPassword, new { @class = "form-control", type = "password", @autocomplete = "off", @data_lpignore = "true" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Confirm Password</label>
                                        @Html.TextBoxFor(x => x.Entity.SysUserPasswordConfirm, new { @class = "form-control", type = "password", @autocomplete = "off", @data_lpignore = "true" })
                                    </div>
                                </div>
                            </div>
                    </div>
                    <div class="card-footer">
                        <button id="btnSaveSysUser" type="submit" class="btn btn-default float-right">Save Changes</button>
                    </div>
                </div>
                }
            }

            @*@if (Model.Entity.SysUserID > 0)
            {
                <div class="card card-primary shadow-none">
                    <div class="card-header">
                        <h3 class="card-title">Add Groups</h3>
                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body" style="display: block;">
                        @{Html.RenderAction("RenderWidget", "SysGroupUserMap", new { @sysUserId = Model.Entity.SysUserID }); }
                    </div>
                </div>
            }*@
        </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        Init();
    });

    function Init() {
        /*SetReadOnly();*/
    }

    //$(document).on("click", "[id*='btnSaveCooperator']", function () {
    //    SaveCooperator();
    //});

    //$(document).on("click", "[id*='btnSaveWebCooperator']", function () {
    //    SaveWebCooperator();
    //});

    //$(document).on("click", "[id*='btnCopyWebCooperator']", function () {
    //    CopyWebCooperator();
    //});

    //$(document).on("click", "[id*='btnSaveSysUser']", function () {
    //    SaveSysUser();
    //});

    //$(document).on("click", "[id*='btnSaveWebUser']", function () {
    //    SaveWebUser();
    //});

    //$(document).on("click", "[id*='btnCopyWebUser']", function () {
    //    CopyWebUser();
    //});

    //function SaveCooperator() {
    //    var link = $("#frmEditCooperator").attr("action");
    //    var formData = new FormData();

    //    formData.append("Entity.ID", $("#frmEditCooperator #Entity_ID").val());
    //    formData.append("Entity.StatusCode", $("#frmEditCooperator #Entity_StatusCode").val());
    //    formData.append("Entity.Salutation", $("#frmEditCooperator #Entity_Salutation").val());
    //    formData.append("Entity.FirstName", $("#frmEditCooperator #Entity_FirstName").val());
    //    formData.append("Entity.LastName", $("#frmEditCooperator #Entity_LastName").val());
    //    formData.append("Entity.JobTitle", $("#frmEditCooperator #Entity_JobTitle").val());
    //    formData.append("Entity.Organization", $("#frmEditCooperator #Entity_Organization").val());
    //    formData.append("Entity.OrganizationAbbrev", $("#frmEditCooperator #Entity_OrganizationAbbrev").val());
    //    formData.append("Entity.EmailAddress", $("#frmEditCooperator #Entity_EmailAddress").val());
    //    formData.append("Entity.PrimaryPhone", $("#frmEditCooperator #Entity_PrimaryPhone").val());
    //    formData.append("Entity.CategoryCode", $("#frmEditCooperator #Entity_CategoryCode").val());
    //    formData.append("Entity.SiteID", $("#frmEditCooperator #Entity_SiteID").val());
    //    formData.append("Entity.AddressLine1", $("#frmEditCooperator #Entity_AddressLine1").val());
    //    formData.append("Entity.AddressLine2", $("#frmEditCooperator #Entity_AddressLine2").val());
    //    formData.append("Entity.AddressLine3", $("#frmEditCooperator #Entity_AddressLine3").val());
    //    formData.append("Entity.City", $("#frmEditCooperator #Entity_City").val());
    //    formData.append("Entity.GeographyID", $("#frmEditCooperator #Entity_GeographyID").val());
    //    formData.append("Entity.PostalIndex", $("#frmEditCooperator #Entity_PostalIndex").val());

    //    $.ajax({
    //        url: link,
    //        type: 'POST',
    //        cache: false,
    //        contentType: false,
    //        processData: false,
    //        data: formData,
    //        success: function (response) {
    //            $("#tab-content-cooperator").html(response);
    //        },
    //        error: function () {
    //            alert("Error");
    //        }
    //    });
    //}

    @*function SaveWebCooperator() {
        var link = $("#frmEditWebCooperator").attr("action");
        // DEBUG
        alert("SAVE WC");
        $("#section-card-web-cooperator").removeClass("card-danger");
        $("#section-card-web-cooperator").addClass("card-default");
    }

    function CopyWebCooperator() {
        var link = '@Url.Action("Copy","WebCooperator")';
        var formData = new FormData();

        formData.append("Entity.ID", $("#frmEditWebCooperator #Entity_ID").val());
        formData.append("CooperatorID", $("#frmEditWebCooperator #CooperatorID").val());

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#card-web-cooperator").html(response);
            },
            error: function () {
                alert("Error");
            }
        });
    }

    function SaveSysUser() {
        var link = $("#frmEditSysUser").attr("action");
        var formData = new FormData();

        formData.append("Entity.CooperatorID", $("#frmEditSysUser #Entity_CooperatorID").val());
        formData.append("Entity.SysUserID", $("#frmEditSysUser #Entity_SysUserID").val());
        formData.append("Entity.SysUserName", $("#frmEditSysUser #Entity_SysUserName").val());
        formData.append("Entity.SysUserPassword", $("#frmEditSysUser #Entity_SysUserPassword").val());
        formData.append("Entity.SysUserPasswordConfirm", $("#frmEditSysUser #Entity_SysUserPasswordConfirm").val());

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#card-sys-user").html(response);
            },
            error: function () {
                alert("Error");
            }
        });
    }

    function SaveWebUser() {
        var link = $("#frmEditWebUser").attr("action");
        // DEBUG
        alert("SAVE WU " + link);
        $("#section-card-web-user").removeClass("card-danger");
        $("#section-card-web-user").addClass("card-default");
    }

    function CopyWebUser() {
        var link = '@Url.Action("Copy","WebUser")';
        var sysUserId = $("#frmEditSysUser #Entity_ID").val();
        var webCooperatorId = $("#frmEditWebCooperator #Entity_ID").val();
        var webUserName = $("#frmEditCooperator #Entity_EmailAddress").val();
        var formData = new FormData();

        //DEBUG
        alert("SU IS " + sysUserId + " AND WC IS " + webCooperatorId + " AND USER NAME IS " + webUserName);

        formData.append("SysUserID", sysUserId);
        formData.append("Entity.WebCooperatorID", webCooperatorId);
       /* formData.append("Entity.WebCooperatorID", webCooperatorId);*/

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#card-web-user").html(response);
            },
            error: function () {
                alert("Error");
            }
        });
    }*@
    //$('#btnEditGroups').on('click', function () {
    //    $("#modal_sys_group_user_map_lookup").modal("show");
    //});

    //$('#btnSaveSysUser').on('click', function () {
    //    AjaxFormSubmit();
    //});

    //$('#btnSubmitResetPassword').on('click', function () {
    //    AjaxFormSubmit();
    //});

    @*function LoadRecordsOwnedList(cooperatorId) {
        var link = '@Url.Action("RenderRecordsOwnedList","Cooperator")';
        var formData = new FormData();
        var partialViewSectionName = "";

        formData.append("cooperatorId", cooperatorId);

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#tab-records-owned").html(response);
            }
        });
    }*@

    @*function RenderSysUserWidget(sysUserId) {
        var link = '@Url.Action("RenderWidget","SysUser")';
        var formData = new FormData();
        formData.append("sysUserId", sysUserId);
        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#section-sys-user").html(response);
            }
        });
    }*@

    @*function RenderSysGroupWidget(sysUserId) {
        var link = '@Url.Action("RenderSysGroupWidget","SysUser")';
        var formData = new FormData();
        formData.append("sysUserId", sysUserId);
        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#section-sys-group").html(response);
            }
        });
    }*@

    //function AjaxFormSubmit() {
    //    var link = $("#frmEditSysUser").attr("action");
    //    var formData = new FormData();
    //    formData.append("Entity.CooperatorID", $("#frmEditCooperator #Entity_ID").val());
    //    formData.append("Entity.SysUserID", $("#frmEditSysUser #Entity_SysUserID").val());
    //    formData.append("Entity.UserName", $("#frmEditSysUser #Entity_UserName").val());
    //    formData.append("Entity.Password", $("#frmEditSysUser #Entity_Password").val());
    //    formData.append("Entity.PasswordConfirm", $("#frmEditSysUser #Entity_PasswordConfirm").val());

    //    $.ajax({
    //        url: link,
    //        type: 'POST',
    //        cache: false,
    //        dataType: 'json',
    //        contentType: false,
    //        processData: false,
    //        data: formData,
    //        success: function (data) {
    //            RenderSysUserWidget(data.sysUser.ID);
    //            RenderSysGroupWidget(data.sysUser.ID);
    //        },
    //        error: function (ex) {
    //            alert("Error");
    //        }
    //    });
    //}

    //function AjaxResetPasswordFormSubmit() {
    //    var link = $("#frmSysUserResetPassword").attr("action");
    //    //TODO
    //}
</script>


