@model USDA.ARS.GRIN.GGTools.Taxonomy.ViewModelLayer.GeographyViewModelBase
@{
    ViewBag.Title = Model.PageTitle;
    Layout = "~/Views/Shared/_LayoutAdminLTE.cshtml";
}

<style>
    .filter-section {
        min-height: 200px;
        max-height: 250px;
        overflow-y: scroll;
    }

    .list-group-item {
        border-color: #f4f4f4;
        font-weight: normal;
    }
</style>

<div class="box box-solid">
    <div class="box-body">
        <div class="btn-group">
            <a href="@Url.Action("Add","Geography")" class="btn btn-default"><i class="fa fa-plus"></i> New</a>
        </div>
        <div class="btn-group">
            <button id="btnOpenFolderModal" type="button" class="btn btn-default"><i class="fa fa-folder"></i></button>
        </div>
    </div>
</div>

    <div class="row">
        <div class="col-md-3">
            <div class="box box-default">
                <div class="box-header with-border">
                    <i class="fa fa-filter"></i>
                    <h3 class="box-title">Regions</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body filter-section">
                    <div id="section-continents">
                        <div class="list-group">
                            @foreach (var result in Model.DataCollectionRegions)
                            {
                                <label class="list-group-item">
                                    <input id="@result.ID" class="continent-check-input me-1" type="checkbox" value="@result.Title">
                                    @result.Title
                                </label>
                            }
                        </div>
                    </div>
                </div>
                <div class="box-footer"></div>
            </div>
            <div class="box box-default">
                <div class="box-header with-border">
                    <i class="fa fa-filter"></i>
                    <h3 class="box-title">Countries</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
                @*<div id="section-use-regions" class="input-group" style="padding-left:15px; padding-right:15px;">
                        <input type="text" disabled="" readonly class="form-control" value="Include countries without regions">
                        <span class="input-group-addon">
                            <input id="cbxIncludeNonRegions" type="checkbox" />
                        </span>
                    </div>*@
                <div class="box-body filter-section">
                    <div id="section-countries">
                        <div id="section-country-items" class="list-group">
                            @foreach (var result in Model.DataCollectionCountries)
                            {
                                <label class="list-group-item">
                                    <input id="@result.CountryCode" class="country-check-input me-1" type="checkbox" value="@result.CountryCode">
                                    @result.CountryName
                                </label>
                            }
                        </div>
                    </div>
                </div>
                <div class="box-footer"></div>
            </div>
        </div>
        <div class="col-md-9">
            <div class="box box-default">
                <div class="box-header with-border">
                    <i class="fa fa-table"></i>
                    <h3 class="box-title">Search Results</h3>
                </div>
                <div class="box-body">
                    <div id="section-geographies" class="data-list">
                        @Html.Partial("~/Views/Geography/_List.cshtml")
                    </div>
                </div>
                <div class="box-footer no-padding">
                </div>
            </div>
        </div>
    </div>

    <!--
    =========================================================================================
    DEBUG
    =========================================================================================
    -->
    <div class="box box-default collapsed-box box-solid">
        <div class="box-header with-border">
            <h3 class="box-title">DEBUG</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-plus"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            <label>CONTINENT IDS</label>
            <input type="text" id="txtDEBUGContinentRegionIDs" style="width:100%; background-color:yellow;" />

            <label>CONTINENTS</label>
            <input type="text" id="txtDEBUGContinentNames" style="width:100%; background-color:yellow;" />

            <label>SUBCONTINENTS</label>
            <input type="text" id="txtDEBUGSubcontinentRegionIDs" style="width:100%; background-color:yellow;" />

            <label>COUNTRIES</label>
            <input type="text" id="txtDEBUGCountryCodes" style="width:100%; background-color:yellow;" />

            <label>STATUSES</label>
            <input type="text" id="txtDEBUGGeographyStatuses" style="width:100%; background-color:yellow;" />
        </div>
    </div>


    <script type="text/javascript">
    $(document).ready(function () {
        //InitDataTable("data-table-geography");
        FilterGeographies();
    });

    /*========================================================================================
    * REGIONS
    *========================================================================================
    */
    $(".continent-check-input").change(function () {
        var selectedContinentNames = GetSelectedContinentNames();
        var selectedContinentRegionIDs = GetSelectedContinentRegionIDs();

        //DEBUG
        $("#txtDEBUGContinentNames").val(selectedContinentNames);
        $("#txtDEBUGContinentRegionIDs").val(selectedContinentRegionIDs);

        SearchSubContinents(selectedContinentNames);
        FilterGeographies();
    });

    function GetSelectedContinentRegionIDs() {
        var valueArray = [];
        $("#section-continents input:checked").each(function () {
            var id = $(this).attr("id");
            valueArray.push(id);
        });
        return valueArray;
    }

    function GetSelectedContinentNames() {
        var valueArray = [];
        $("#section-continents input:checked").each(function () {
            var value = "'" + $(this).attr("value") + "'";
            valueArray.push(value);
        });
        return valueArray;
    }

    /*========================================================================================
    * SUBCONTINENTS
    *========================================================================================
    */
    $(document).on("click", ".subcontinent-check-input", function () {
        var selectedSubContinentRegionIDList = GetSelectedSubContinentRegionIDs();

        //DEBUG
        $("#txtDEBUGSubcontinentRegionIDs").val(selectedSubContinentRegionIDList);

        FilterGeographies();

        //TODO Filter main list

        //TODO Re-select any previously selected countries.
        //var selectedCountryCodeList = $("#txtDEBUGCountries").val();
        //if (selectedCountryCodeList.length > 0) {
        //    selectedCountryCodeList = selectedCountryCodeList.replace(/"|'/g, '');
        //    var idArray = selectedCountryCodeList.split(",");

        //    for (var i = 0; i < idArray.length; i++)
        //        $("#" + i).prop('checked', true);
        //        /*$("#section-country-items [id=" + idArray[i] + "]").attr("checked", "checked");*/
        //}
    });

    function SearchSubContinents(continentNameList) {
        var actionUrl = '@Url.Action("SearchSubContinents","Geography")';
        var formData = new FormData();
        formData.append("ContinentNameList", continentNameList);

        $.ajax({
            url: actionUrl,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#section-subcontinents").html(response);
            }
        });
    }

    $(document).on("click", "[id='cbxIncludeNonRegions']", function () {
        var selectedRegionIDList = GetSelectedSubContinents();
        //DEBUG
        $("#txtDEBUGSubcontinents").val(selectedRegionIDList);
        SearchCountries(selectedRegionIDList);
        //if ($("#cbxIncludeNonRegions").prop('checked') == true) {
        //    //TODO Repeat search if changed
        //}
    });

    function GetSelectedSubContinentRegionIDs() {
        var valueArray = [];
        $("#section-subcontinents input:checked").each(function () {
            var id = $(this).attr("id");
            valueArray.push(id);
        });
        return valueArray;
    }

    function GetSelectedSubContinentNames() {
        var valueArray = [];
        $("#section-subcontinents input:checked").each(function () {
            var id = $(this).attr("id");
            valueArray.push(id);
        });
        return valueArray;
    }


    /*========================================================================================
    * COUNTRIES
    *========================================================================================
    */
    $(document).on("click", ".country-check-input", function () {

        var id = $(this).attr("id");
        var selectedCountryCodeList = GetSelectedCountries();
        //DEBUG
        $("#txtDEBUGCountryCodes").val(selectedCountryCodeList);
        FilterGeographies();
    });

     function GetSelectedCountries() {
        var valueArray = [];
        $("#section-countries input:checked").each(function () {
            var id = "'" + $(this).attr("id") + "'";
            valueArray.push(id);
        });
        return valueArray;
    }

    function SearchCountries(regionIdList) {
        var actionUrl = '@Url.Action("SearchCountries","Geography")';
        var includeNonRegions = "Y";
        var formData = new FormData();
        formData.append("RegionIDList", regionIdList);

        if ($("#cbxIncludeNonRegions").prop('checked') == true) {
            includeNonRegions = "Y";
        }
        else {
            includeNonRegions = "N"
        }
        formData.append("IncludeNonRegions", includeNonRegions);

        $.ajax({
            url: actionUrl,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#section-countries").html(response);
            }
        });
    }

    /*========================================================================================
    * GEOGRAPHY
    *========================================================================================
    */
    function FilterGeographies() {
        var actionUrl = '@Url.Action("SearchGeographies","Geography")';
        var formData = new FormData();

        // Get existing filters
        var continentRegionIdList = $("#txtDEBUGContinentRegionIDs").val();
        var subContinentRegionIdList = $("#txtDEBUGSubcontinentRegionIDs").val();
        var countryCodeList = $("#txtDEBUGCountryCodes").val();

        formData.append("ContinentRegionIDList", continentRegionIdList);
        formData.append("SubContinentRegionIDList", subContinentRegionIdList);
        formData.append("CountryCodeList", countryCodeList);

        $("body").addClass("submit-progress-bg");
        $(".submit-progress").removeClass("hidden");

        $.ajax({
            url: actionUrl,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#section-geographies").html(response);
                InitDataTable("data-table-geography");
                $("body").removeClass("submit-progress-bg");
                $(".submit-progress").addClass("hidden");
            }
        });
    }

    /*========================================================================================
    * MAPS
    *========================================================================================
    */
    $("#btnGenerateMaps").click(function () {
        var selectedGeographyIds = GetSelectedEntityIDs("data-table-geography");
        GenerateMaps(selectedGeographyIds);
    });

    function GenerateMaps(geographyIdList) {
        var actionUrl = '@Url.Action("Add","GeographyMap")';
        var entityId = $("#Entity_SpeciesID").val();
        var formData = new FormData();

        formData.append("SpeciesID", entityId);
        formData.append("IDList", geographyIdList);

        $.ajax({
            url: actionUrl,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#section-geography-maps").html(response);
            }
        });
    }

    //$(document).ready(function () {
    //    var events = $('#debug-sel-continents');
    //    var selectedContinentIDList = "";

    //    var tableContinents = $('#tblContinents').DataTable({
    //        dom: 'Blfrtip',
    //        //buttons: [
    //        //    'selectAll',
    //        //    'selectNone'
    //        //],
    //        select: true,
    //        searching: false,
    //        paging: false,
    //        columnDefs: [
    //            { targets: [0], visible: false }

    //        ]
    //    });

    //    tableContinents
    //        .on('select', function (e, dt, type, indexes) {
    //            var rowData = tableContinents.rows(indexes).data().toArray();
    //            //events.prepend('<div><b>' + type + ' selection</b> - ' + JSON.stringify(rowData) + '</div>');
    //            //DEBUG
    //            //var ids = $.map(tableContinents.rows('.selected').data(), function (item) {
    //            //    return "'" + item[1] + "'"
    //            //});

    //            var selectedContinentNames = GetSelectedEntityNames("tblContinents");
    //            $("#txtDEBUGContinents").val(selectedContinentNames);
    //            Search(selectedContinentNames);
    //        })
    //    //.on('deselect', function (e, dt, type, indexes) {
    //    //    var rowData = table.rows(indexes).data().toArray();
    //    //    events.prepend('<div><b>' + type + ' <i>de</i>selection</b> - ' + JSON.stringify(rowData) + '</div>');
    //    //});
    //});

    /*========================================================================================
    * SUB-CONTINENT SELECTION
    *========================================================================================
    */
    //function ConfigureSubContinentDataTable() {
    //    $(document).ready(function () {
    //        var events = $('#debug-sel-subcontinents');
    //        var selectedContinentIDList = "";

    //        var table = $('#tblSubContinents').DataTable({
    //            dom: 'Blfrtip',
    //            //buttons: [
    //            //    'selectAll',
    //            //    'selectNone'
    //            //],
    //            select: true,
    //            searching: false,
    //            responsive: true,
    //            stateSave: true,
    //            paging: false,
    //            columnDefs: [
    //                { targets: [0], visible: false }

    //            ]
    //        });

    //        table
    //            .on('select', function (e, dt, type, indexes) {
    //                var rowData = table.rows(indexes).data().toArray();
    //                events.prepend('<div><b>' + type + ' selection</b> - ' + JSON.stringify(rowData) + '</div>');

    //                //DEBUG
    //                var ids = $.map(table.rows('.selected').data(), function (item) {
    //                    return "'" + item[0] + "'"
    //                });
    //                $("#txtDEBUGSubcontinents").val(ids);

    //            })
    //        //.on('deselect', function (e, dt, type, indexes) {
    //        //    var rowData = table.rows(indexes).data().toArray();
    //        //    events.prepend('<div><b>' + type + ' <i>de</i>selection</b> - ' + JSON.stringify(rowData) + '</div>');
    //        //});
    //    });
    //}

    /*========================================================================================
    * COUNTRY SELECTION
    *========================================================================================
    */
    //$(document).ready(function () {
    //    var events = $('#debug-sel-countries');
    //    var selectedCountryIDList = "";

    //    var table2 = $('#tblCountries').DataTable({
    //        dom: 'Blfrtip',
    //        //buttons: [
    //        //    'selectAll',
    //        //    'selectNone'
    //        //],
    //        paging: false,
    //        select: true,
    //        searching: false,
    //        columnDefs: [
    //            { targets: [0], visible: false }

    //        ]
    //    });

    //    table2
    //        .on('select', function (e, dt, type, indexes) {
    //            var rowData = table2.rows(indexes).data().toArray();
    //            //events.prepend('<div><b>' + type + ' selection</b> - ' + JSON.stringify(rowData) + '</div>');

    //            //DEBUG
    //            var ids = $.map(table2.rows('.selected').data(), function (item) {
    //                return "'" + item[0] + "'"
    //            });
    //            $("#txtDEBUGCountries").val(ids);

    //        })
    //    //.on('deselect', function (e, dt, type, indexes) {
    //    //    var rowData = table2.rows(indexes).data().toArray();
    //    //    events.prepend('<div><b>' + type + ' <i>de</i>selection</b> - ' + JSON.stringify(rowData) + '</div>');
    //    //});
    //});

    //$(document).ready(function () {
    //    var selectedGeographyStatusList = "";

    //    var tableGeographyStatuses = $('#tblGeographyStatuses').DataTable({
    //        dom: 'Blfrtip',
    //        buttons: [
    //            'selectAll',
    //            'selectNone'
    //        ],
    //        select: true,
    //        searching: false,
    //        columnDefs: [
    //            { targets: [0], visible: false }

    //        ]
    //    });

    //    tableGeographyStatuses
    //        .on('select', function (e, dt, type, indexes) {
    //            var rowData = tableGeographyStatuses.rows(indexes).data().toArray();
    //            //events.prepend('<div><b>' + type + ' selection</b> - ' + JSON.stringify(rowData) + '</div>');

    //            //DEBUG
    //            var ids = $.map(tableGeographyStatuses.rows('.selected').data(), function (item) {
    //                return "'" + item[0] + "'"
    //            });
    //            $("#txtDEBUGGeographyStatuses").val(ids);

    //        })
    //    //.on('deselect', function (e, dt, type, indexes) {
    //    //    var rowData = table2.rows(indexes).data().toArray();
    //    //    events.prepend('<div><b>' + type + ' <i>de</i>selection</b> - ' + JSON.stringify(rowData) + '</div>');
    //    //});
    //});

    /* OLD -- uses checkbox selector CBH 4/9/22*/
    //$(".continent-selector").click(function () {
    //    var selectedContinentList = GetSelectedContinents();
    //    //$("#txtDEBUGContinents").val(selectedContinentList);
    //    //Search();
    //});

    function GetSelectedEntityIDs(tableName) {
        var table = $('#' + tableName).DataTable();
        var ids = $.map(table.rows('.selected').data(), function (item) {
            return item[0]
        });
        /*console.log(ids)*/
        return ids;
    }

    function GetSelectedEntityNames(tableName) {
        var table = $('#' + tableName).DataTable();
        var ids = $.map(table.rows('.selected').data(), function (item) {
            return "'" + item[1] + "'"
        });
        /*console.log(ids)*/
        return ids;
    }

    function GetSelectedGeographies(tableName) {
        var table = $('#' + tableName).DataTable();
        var ids = $.map(table.rows('.selected').data(), function (item) {
            return item[0]
        });
        console.log(ids)
        return ids;
    }

    //$('#btnDEBUG').click(function (e) {
    //    var searchCriteria = $("#txtDEBUGSubcontinents").val();
    //    var oTable = $('#tblSubContinents').DataTable();
    //    oTable.rows({ search: 'applied' }).every(function (rowIdx, tableLoop, rowLoop) {
    //        if (oTable.row(rowIdx).data().SubContinent == searchCriteria) {
    //            $(this.node()).addClass('selected');
    //        }
    //    });
    //});

    </script>

