@model USDA.ARS.GRIN.GGTools.ViewModelLayer.HomeViewModel
@{
    ViewBag.Title = "Taxonomy Editor";
    Layout = "~/Views/Shared/_LayoutAdminLTE3.cshtml";
}

<div class="alert alert-warning alert-dismissible">
    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
    <h5><i class="icon fas fa-exclamation-triangle"></i> Please Note</h5>
    Folder logic has been temporarily disabled.
</div>

<!--<div class="card card-success card-tabs">
    <div id="section-cooperator-tabs" class="card-header p-0 pt-1">
        <ul class="nav nav-tabs" id="custom-tabs-two-tab" role="tablist">
            <li class="pt-2 px-3">
                <h3 id="placeholder-cooperator-name" class="card-title">
                    Folders
                </h3>
            </li>
            <li id="tab-cooperator" class="nav-item">
                <a class="nav-link active" id="tab-selector-favorites" data-toggle="pill" href="#tab-content-favorites" role="tab" aria-controls="custom-tabs-two-home" aria-selected="true">
                    <i class="fas fa-star text-warning"></i>
                    Favorites
                </a>
            </li>
            <li id="tab-sys-user" class="nav-item">
                <a class="nav-link" id="tab-selector-recently-added" data-toggle="pill" href="#tab-content-recently-added" role="tab" aria-controls="custom-tabs-two-profile" aria-selected="false">
                    <i class="fas fa-folder"></i>
                    All Folders
                </a>
            </li>
            <li id="tab-sys-user" class="nav-item">
                <a class="nav-link" id="tab-selector-shared-with-me" data-toggle="pill" href="#tab-content-shared-with-me" role="tab" aria-controls="custom-tabs-two-profile" aria-selected="false">
                    <i class="fas fa-users"></i>
                    Shared With Me
                </a>
            </li>-->
            @*<li id="tab-sys-user" class="nav-item">
                <a class="nav-link" id="tab-selector-dynamic" data-toggle="pill" href="#tab-content-dynamic" role="tab" aria-controls="custom-tabs-two-profile" aria-selected="false">Dynamic Folders</a>
            </li>*@
        <!--</ul>
    </div>
    <div class="card-body web-order-request">
        <div class="tab-content">
            <div class="tab-pane fade show active" id="tab-content-favorites" role="tabpanel" aria-labelledby="custom-tabs-two-home-tab">
                @{Html.RenderAction("_List", "AppUserItemFolder", new { @cooperatorId = Model.AuthenticatedUser.CooperatorID, @isFavorite = "Y" }); }
            </div>
            <div class="tab-pane fade" id="tab-content-recently-added" role="tabpanel" aria-labelledby="custom-tabs-two-home-tab">
                @{Html.RenderAction("_List", "AppUserItemFolder", new { @cooperatorId = Model.AuthenticatedUser.CooperatorID }); }
            </div>
            <div class="tab-pane fade" id="tab-content-shared-with-me" role="tabpanel" aria-labelledby="custom-tabs-two-home-tab">
                @{Html.RenderAction("_List", "AppUserItemFolder", new { @cooperatorId = Model.AuthenticatedUser.CooperatorID, @isShared = "Y" }); }
            </div>-->
            @*<div class="tab-pane fade" id="tab-content-dynamic" role="tabpanel" aria-labelledby="custom-tabs-two-home-tab">
                @{Html.RenderAction("_List", "AppUserItemFolder", new { @cooperatorId = Model.AuthenticatedUser.CooperatorID, @folderType = "DYNAMIC" }); }
            </div>*@
        <!--</div>
    </div>
</div>-->

@{Html.RenderAction("RenderListWidget", "Cooperator", new { sysGroupTag = "MANAGE_TAXONOMY" });}

<script type="text/javascript">
    $(document).ready(function () {
        Init();
    });

    function Init() {
        var tabName = $("#section-user-tabs ul li:first").attr('id');
        LoadUserLists(tabName);
        // Intialize all folder data tables.
        //$(".folder-table").DataTable();
        InitDataTablesByClass(".folder-table");
    }

    function InitDataTablesByClass(className) {
        $(document).ready(function () {
            var table = $(className).DataTable({
                dom: 'Blfrtip',
                paging: true,
                "pageLength": 10,
                initComplete: function () {
                    SetControlVisibility(tableName);
                },
                responsive: true,
                buttons: [
                    'selectAll',
                    'selectNone',
                    'csv',
                    'excel',
                    'pdf',
                    {
                        text: '+ Add',
                        action: function (e, dt, node, config) {
                            AddRecord();
                        }
                    }
                ],
                select: true,
                lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
                columnDefs: [
                    { targets: [0], visible: false }
                ]
            });

            //var table = $(tableName).DataTable(); // Valid initialized DataTable
            //if (table instanceof $.fn.dataTable.Api) {
            //    //DEBUG
            //    alert(tableName + " IS DTABLE");
            //} else {

            //}


            //if (!$.fn.DataTable.isDataTable(tableName)) {
            //    var table = $(tableName).DataTable({
            //        dom: 'Blfrtip',
            //        paging: true,
            //        "pageLength": 10,
            //        initComplete: function () {
            //            SetControlVisibility(tableName);
            //        },
            //        responsive: true,
            //        buttons: [
            //            'selectAll',
            //            'selectNone',
            //            'csv',
            //            'excel',
            //            'pdf'
            //        ],
            //        select: true,
            //        lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            //        columnDefs: [
            //            { targets: [0], visible: false }
            //        ]
            //    });
            //}
            //else {

            //}
        });
    }

    $('#section-user-tabs ul.nav li').on('click', function () {
        var tabName = $(this).attr('id');
        LoadUserLists(tabName);
    });

    $('#section-user-lists ul.nav li').on('click', function () {
        var id = $(this).attr('id');
        //TODO
    });

    /*================================================================================
    * Populates the list of GRIN-Global (CT) folders
    *================================================================================
    */
    function LoadUserLists(listName) {
        var link = '@Url.Action("_List", "AppUserItemList")';
        var formData = new FormData();

        formData.append("TabName", listName);

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#user-tab-name").html(listName);
                $("#section-user-lists-data").html(response);
            }
        });
    }

    /*================================================================================
     * Populates the list of Taxonomy-specific folders
     *================================================================================
    */
    function LoadUserFolders() {
        var link = '@Url.Action("_List", "Folder")';
        var formData = new FormData();

        formData.append("TabName", listName);

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#user-tab-name").html(listName);
                $("#section-user-lists-data").html(response);
            }
        });
    }


    function LoadFolderItems(folderTypeDescription, folderId)  {
        var link = '@Url.Action("FolderItems", "CONTROLLER_NAME")';
        link = link.replace("CONTROLLER_NAME", folderTypeDescription);

        var formData = new FormData();
        formData.append("FolderID", folderId);

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#section-folder-items").html(response);
            },
            error: function (jqXHR) {
                alert("Error loading folder contents");
            }
        });
    }

    // Handle form submission
    $('#tagForm').submit(function (event) {
        event.preventDefault();
        let existingTag = $('#existingTag').val();
        let newTag = $('#newTag').val();
        let tagColor = $('#tagColor').val();

        if (newTag) {
            // Add code to handle creation of a new tag
            console.log("Creating new tag:", newTag, "with color:", tagColor);
        } else if (existingTag) {
            // Add code to handle selection of an existing tag
            console.log("Selected existing tag:", existingTag);
        } else {
            alert("Please select an existing tag or enter a new one.");
        }
    });

</script>
