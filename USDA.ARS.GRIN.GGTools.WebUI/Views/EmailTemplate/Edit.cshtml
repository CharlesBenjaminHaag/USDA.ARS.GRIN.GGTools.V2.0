@model USDA.ARS.GRIN.GGTools.ViewModelLayer.EmailTemplateViewModel
@{
    ViewBag.Title = Model.PageTitle;
    Layout = "~/Views/Shared/_LayoutAdminLTE3.cshtml";
}

@Html.Partial("~/Views/Shared/_RevisionHistory.cshtml")
@using (Html.BeginForm("Edit", "EmailTemplate", FormMethod.Post, new { id = "frmEdit" }))
{
    @Html.HiddenFor(x => x.PageTitle)
    @Html.HiddenFor(x => x.EventAction)
    @Html.HiddenFor(x => x.EventValue)
    @Html.HiddenFor(x => x.TableName)
    @Html.HiddenFor(x => x.TableCode)
    @Html.HiddenFor(x => x.Entity.ID)
    @Html.HiddenFor(x => x.Entity.Title)
    @Html.HiddenFor(x => x.Entity.Body)

    <div class="card card-default card-outline">
        <div class="card-header">
            <h3 class="card-title">@Model.Entity.Title</h3>
        </div>
        <!-- /.card-header -->
        <div class="card-body">
            <div class="form-group">
                <label>From</label>
                @Html.TextBoxFor(x => x.Entity.EmailFrom, new { @class = "form-control", @readonly = "readonly" })
            </div>
            <div class="form-group">
                <label>To</label>
                <input type="text" class = "form-control" placeholder="[RECIPIENT LIST SPECIFIC TO WEB ORDER REQUEST]", readonly="readonly">
            </div>
            <div class="form-group">
                <label>Requestor First Name</label>
                @Html.TextBoxFor(x => x.Entity.Subject, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>Body</label>
                <div id="summernote"></div>
            </div>
        </div>
        <!-- /.card-body -->
        <div class="card-footer">
            <div class="float-right">
                <button id="btnReset" type="button" class="btn btn-danger"><i class="fas fa-undo"></i> Reset</button>
                <button id="btnSaveEdits" type="submit" class="btn btn-primary"><i class="far fa-save"></i> Save Edits</button>
            </div>

        </div>
        <!-- /.card-footer -->
    </div>

}

<script type="text/javascript">
    $(document).ready(function () {
        $('#summernote').summernote({
            height: 300, // set editor height
            minHeight: null, // set minimum height of editor
            maxHeight: null, // set maximum height of editor
            focus: true // set focus to editable area after initializing summernote
        });
        SetBodyText();
    });

    $(document).ready(function () {
        $('#frmEdit').on('submit', function (event) {
            var editedBodyText = GetBodyText();
            event.preventDefault(); // Prevent the form from submitting
            console.log('Form is being submitted');
            $("#Entity_Body").val(editedBodyText);
            this.submit();
        });
    });

    function GetBodyText() {
        var markupStr = $('#summernote').summernote('code');
        return markupStr;
    }

    function SetBodyText() {
        var bodyText = $("#Entity_Body").val();
        $('#summernote').summernote('code', bodyText);
    }
</script>
