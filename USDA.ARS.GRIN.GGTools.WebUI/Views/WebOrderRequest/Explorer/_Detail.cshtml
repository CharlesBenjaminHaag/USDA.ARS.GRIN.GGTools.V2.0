@model USDA.ARS.GRIN.GGTools.ViewModelLayer.WebOrderRequestViewModel
<div class="row">
    <div class="col-md-2">
        <div class="form-group">
            <label>Status</label>

            @{
                string statusCssClass = String.Empty;
                switch (Model.Entity.StatusCode.ToUpper())
                {
                    case "SUBMITTED":
                        statusCssClass = "background-color: purple; color:white;";
                        break;
                    case "ACCEPTED":
                        statusCssClass = "background-color: green; color:white;";
                        break;
                    case "CANCELED":
                        statusCssClass = "background-color: yellow; color:black;";
                        break;
                    case "NRR_FLAG":
                        statusCssClass = "background-color: red; color:white;";
                        break;
                }
            }
            @Html.TextBoxFor(x => x.Entity.StatusCode, new { @class = "form-control form-control-sm", @readonly = "readonly", disabled = "disabled", @style = statusCssClass })
        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group">
            <label>Submitted By</label>
            @Html.TextBoxFor(x => x.Entity.WebCooperatorFullName, new { @class = "form-control form-control-sm", @readonly = "readonly", disabled = "disabled" })
        </div>
    </div>
    <div class="col-md-3">
        <label>Email</label>
        @Html.TextBoxFor(x => x.Entity.WebCooperatorEmail, new { @class = "form-control form-control-sm", @readonly = "readonly", disabled = "disabled" })
    </div>
    <div class="col-md-2">
        <div class="form-group">
            <label>Submitted</label>
            @Html.TextBoxFor(x => x.Entity.OrderDate, new { @class = "form-control form-control-sm", @readonly = "readonly", disabled = "disabled" })
        </div>
    </div>
    <div class="col-md-2">
        <div class="form-group">
            <label>Intended Use</label>
            <div class="input-group">
                @Html.TextBoxFor(x => x.Entity.IntendedUseCode, new { @class = "form-control form-control-sm", @readonly = "readonly", disabled = "disabled" })
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="form-group">
            <label>Intended Use Note</label>
            <p class="text-muted well well-sm no-shadow">
                @Model.Entity.IntendedUseNote
            </p>
        </div>
    </div>
</div>

@if (!String.IsNullOrEmpty(Model.Entity.SpecialInstruction))
{
    <div class="row">
        <div class="col-md-12">
            <label>Special Instruction</label>
            <p class="text-muted well well-sm no-shadow">
                @Model.Entity.SpecialInstruction
            </p>
        </div>
    </div>
}

@if (!String.IsNullOrEmpty(Model.Entity.Note))
{
    <div class="row">
        <div class="col-md-12">
            <label>Note</label>
            <p class="text-muted well well-sm no-shadow">
                @Model.Entity.Note
            </p>
        </div>
    </div>
}

@foreach (var result in Model.DataCollectionItems)
{ 
    <div class="row">
        <div class="col-md-3">
            @result.DistributionForm
        </div>
    </div>
}