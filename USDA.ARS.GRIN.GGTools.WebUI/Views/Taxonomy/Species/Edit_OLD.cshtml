@model USDA.ARS.GRIN.GGTools.Taxonomy.ViewModelLayer.SpeciesViewModel
@{
    ViewBag.Title = Model.PageTitle;
    Layout = "~/Views/Shared/_LayoutAdminLTE3Interior.cshtml";
}

<style>
    /*.btn-group, .btn-group-vertical {
        position: relative;
        display: inline-block;
        vertical-align: middle;
    }*/

    .ul.wysihtml5-toolbar {
        margin: 0;
        padding: 0;
        display: block;
    }

        .ul.wysihtml5-toolbar > li {
            float: left;
            display: list-item;
            list-style: none;
            margin: 0 5px 10px 0;
        }

    ul.wysihtml5-toolbar > li {
        float: left;
        display: list-item;
        list-style: none;
        margin: 0 5px 10px 0;
    }

    .dropdown, .dropup {
        position: relative;
    }
</style>

@using (Html.BeginForm("Edit", "Species", FormMethod.Post, new { id = "frmEdit" }))
{
    @Html.HiddenFor(x => x.EventAction)
    @Html.HiddenFor(x => x.EventValue)
    @Html.HiddenFor(x => x.TableName)
    @Html.HiddenFor(x => x.TableCode)
    @Html.HiddenFor(x => x.Entity.ID)
    @Html.HiddenFor(x => x.Entity.Rank)
    @Html.HiddenFor(x => x.Entity.IsAcceptedName)
    @Html.HiddenFor(x => x.Entity.CreatedByCooperatorID)
    @Html.HiddenFor(x => x.Entity.CreatedByCooperatorName)
    @Html.HiddenFor(x => x.Entity.ModifiedByCooperatorID)
    @Html.HiddenFor(x => x.Entity.ModifiedByCooperatorName)
    @Html.HiddenFor(x => x.Entity.InfraspecificType)
    @Html.HiddenFor(x => x.Entity.IsVarietalHybrid)
    @Html.HiddenFor(x => x.Entity.IsSubVarietalHybrid)
    @Html.HiddenFor(x => x.Entity.IsSubspecificHybrid)
    @Html.HiddenFor(x => x.Entity.IsFormaHybrid)
    @Html.HiddenFor(x => x.Entity.VerifiedByCooperatorID)
    @Html.HiddenFor(x => x.Entity.VerifiedByCooperatorName)
    @Html.HiddenFor(x => x.Entity.NameVerifiedDate)
    <input type="hidden" id="hfModalEventValue" />
    <div id="section-verification">
        @Html.Partial("~/Views/Taxonomy/Species/_Verification.cshtml")
    </div>
    @Html.Partial("~/Views/Shared/_RevisionHistory.cshtml")

    <div class="card card-default">
        <div class="card-header">
            <div class="btn-group">
                <a id="btnSetAcceptedOn" class="btn btn-default btn-sm" href="#" role="button"><i class="fas fa-thumbs-down"></i> Not Accepted</a>
                <a id="btnSetAcceptedOff" class="btn btn-default btn-sm" href="#" role="button"><i class="fas fa-thumbs-up"></i> Accepted</a>
            </div>
            @if (Model.Entity.ID > 0)
            {
                <div class="btn-group">
                    <a class="btn btn-default btn-sm" href="@Url.Action("Add", "Species", new { @rank = "subspecies", @speciesId = Model.Entity.ID })">Add Subspecies</a>
                    <button type="button" class="btn btn-default btn-sm dropdown-toggle dropdown-icon" data-toggle="dropdown" aria-expanded="false">
                        <span class="sr-only">Toggle Dropdown</span>
                    </button>
                    <div class="dropdown-menu" role="menu" style="">
                        <a class="dropdown-item btn-sm" href="@Url.Action("Add", "Species", new { @rank = "variety", @speciesId = Model.Entity.ID })">Variety</a>
                        <a class="dropdown-item btn-sm" href="@Url.Action("Add", "Species", new { @rank = "subvariety", @speciesId = Model.Entity.ID })">Subvariety</a>
                        <a class="dropdown-item btn-sm" href="@Url.Action("Add", "Species", new { @rank = "form", @speciesId = Model.Entity.ID })">Form</a>
                    </div>
                </div>
                <div class="btn-group">
                    <a class="btn btn-default btn-sm" href="@Url.Action("Add", "SpeciesSynonymMap", new { @speciesId = Model.Entity.ID, @synonymType="heterotypic" })">Add Herotypic Synonym</a>
                    <button type="button" class="btn btn-default btn-sm dropdown-toggle dropdown-icon" data-toggle="dropdown" aria-expanded="false">
                        <span class="sr-only">Toggle Dropdown</span>
                    </button>
                    <div class="dropdown-menu" role="menu" style="">
                        <a class="dropdown-item btn-sm" href="@Url.Action("Add", "SpeciesSynonymMap", new { @speciesId = Model.Entity.ID, @synonymType="homotypic" })">Add Homotypic Synonym</a>
                        <a class="dropdown-item btn-sm" href="@Url.Action("Add", "SpeciesSynonymMap", new { @speciesId = Model.Entity.ID, @synonymType="basionym" })">Add Basionym</a>
                    </div>
                </div>
                <div class="btn-group">
                    <a class="btn btn-default btn-sm" href="@Url.Action("Add", "CommonName", new { @speciesId = Model.Entity.ID })">Add Common Name</a>
                    <button type="button" class="btn btn-default btn-sm dropdown-toggle dropdown-icon" data-toggle="dropdown" aria-expanded="false">
                        <span class="sr-only">Toggle Dropdown</span>
                    </button>
                    <div class="dropdown-menu" role="menu" style="">
                        <a class="dropdown-item btn-sm" href="@Url.Action("Add", "EconomicUse", new { @speciesId = Model.Entity.ID })">Add Economic Use</a>
                        <a class="dropdown-item btn-sm" href="@Url.Action("Add", "GeographyMap", new { @speciesId = Model.Entity.ID })">Add Distribution</a>
                        <a class="dropdown-item btn-sm" href="@Url.Action("Add", "RegulationMap", new { @speciesId = Model.Entity.ID })">Add Regulation</a>
                    </div>
                </div>
                <div class="btn-group">
                    @if (Model.Entity.IsVerified == "N")
                    {
                        <button id="btnSetVerifiedOn"
                                type="button"
                                class="btn btn-default btn-sm"
                                data-ggtools-action="verify"
                                data-ggtools-value="Y">
                            Verify
                        </button>
                    }
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-default btn-sm" data-toggle="modal" data-target="#modal-citation-lookup">
                        <i class="fa fa-book"></i>
                    </button>
                </div>
            }
            <div class="btn-group">
                <button type="button" class="btn btn-default btn-sm pull-right" data-toggle="modal" data-target="#modal-note-lookup">
                    <i class="fa fa-search margin-r-5"></i>
                    Notes
                </button>
            </div>
            @{ Html.RenderAction("_RelatedFoldersList", "Folder", new { tableName = Model.TableName, entityId = Model.Entity.ID }); }
        </div>
        <div class="card-body">
            <div class="table-responsive mailbox-messages">
                @Html.Partial("~/Views/Shared/_ValidationMessages.cshtml")
                <div class="row accepted">
                    <div id="section-accepted-name" class="col-md-4 accepted">
                        <div class="form-group">
                            <label>Accepted Name</label>
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.Entity.AcceptedName, new { @class = "form-control" })
                                @Html.HiddenFor(x => x.Entity.AcceptedID)
                                <span class="input-group-btn">
                                    <button id="btnOpenSpeciesLookupModal" type="button" data-toggle="modal" data-ggtools-action="AcceptedID" data-ggtools-value="AcceptedName" data-target="#modal-species-lookup" class="btn btn-default btn-flat">
                                        <i class="fa fa-search"></i>
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div id="section-synonym-code" class="col-md-2 accepted">
                        <div class="form-group">
                            <label>Synonym Code</label>
                            @Html.DropDownListFor(x => x.Entity.SynonymCode, Model.SynonymCodes, "Select value", new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Genus</label>
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.Entity.GenusName, new { @class = "form-control", @readonly = "readonly", @style = "background-color:#f4f6f9;" })
                                @Html.HiddenFor(x => x.Entity.GenusID)
                                <span class="input-group-btn">
                                    <button id="btnOpenGenusLookupModal" type="button" class="btn btn-default btn-flat" data-ggtools-action="GenusID" data-ggtools-value="GenusName" data-toggle="modal" data-target="#modal-genus-lookup">
                                        <i class="fa fa-search"></i>
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Epithet</label>
                            @Html.TextBoxFor(x => x.Entity.SpeciesName, new { @class = "form-control" })
                        </div>
                    </div>
                    
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Subspecies Name</label>
                            @Html.TextBoxFor(x => x.Entity.SubspeciesName, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Variety Name</label>
                            @Html.TextBoxFor(x => x.Entity.VarietyName, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Subvariety Name</label>
                            @Html.TextBoxFor(x => x.Entity.SubvarietyName, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Forma Name</label>
                            @Html.TextBoxFor(x => x.Entity.FormaName, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        @switch (Model.Entity.Rank)
                        {
                            case "subspecies":
                                <div class="form-group">
                                    <label>Subspecies Authority</label>
                                    <div class="input-group">
                                        @Html.TextBoxFor(x => x.Entity.SubspeciesAuthority, new { @class = "form-control" })
                                        <span class="input-group-btn">
                                            <button type="button" data-toggle="modal" data-target="#modal-author-lookup" class="btn btn-default btn-flat">
                                                <i class="fa fa-search"></i>
                                            </button>
                                        </span>
                                    </div>
                                </div>
                                break;
                            case "variety":
                                <div class="form-group">
                                    <label>Variety Authority</label>
                                    <div class="input-group">
                                        @Html.TextBoxFor(x => x.Entity.VarietyAuthority, new { @class = "form-control" })
                                        <span class="input-group-btn">
                                            <button type="button" data-toggle="modal" data-target="#modal-author-lookup" class="btn btn-default btn-flat">
                                                <i class="fa fa-search"></i>
                                            </button>
                                        </span>
                                    </div>
                                </div>
                                break;
                            case "subvariety":
                                <div class="form-group">
                                    <label>Subvariety Authority</label>
                                    <div class="input-group">
                                        @Html.TextBoxFor(x => x.Entity.SubvarietyAuthority, new { @class = "form-control" })
                                        <span class="input-group-btn">
                                            <button type="button" data-toggle="modal" data-target="#modal-author-lookup" class="btn btn-default btn-flat">
                                                <i class="fa fa-search"></i>
                                            </button>
                                        </span>
                                    </div>
                                </div>
                                break;
                            case "forma":
                                <div class="form-group">
                                    <label>Forma Name</label>
                                    @Html.TextBoxFor(x => x.Entity.FormaName, new { @class = "form-control" })
                                </div>
                                break;
                            default:
                                <div class="form-group">
                                    <label>Authority</label>
                                    <div class="input-group">
                                        @Html.TextBoxFor(x => x.Entity.SpeciesAuthority, new { @class = "form-control" })
                                        <span class="input-group-btn">
                                            <button type="button" data-toggle="modal" data-target="#modal-author-lookup" class="btn btn-default btn-flat">
                                                <i class="fa fa-search"></i>
                                            </button>
                                        </span>
                                    </div>
                                </div>
                                break;
                        }
                    </div>
                    <div class="col-md-12">
                        <div class="form-group">
                            <label>Protologue</label>
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.Entity.Protologue, new { @class = "form-control" })
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-default" data-toggle="modal" data-target="#modal-protologue-lookup">
                                        <i class="fa fa-search"></i>
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Protologue Virtual Path</label>
                            @Html.TextBoxFor(x => x.Entity.ProtologueVirtualPath, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Hybrid Parentage</label>
                            @Html.TextBoxFor(x => x.Entity.HybridParentage, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group section-checkbox">
                            <div class="icheck-primary d-inline">
                                @Html.CheckBoxFor(x => x.Entity.IsSpecificHybridOption)
                                <label for="Entity_IsSpecificHybridOption">
                                    Hybrid
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group section-checkbox">
                            <div class="icheck-primary d-inline">
                                @Html.CheckBoxFor(x => x.Entity.IsWebVisibleOption)
                                <label for="Entity_IsWebVisibleOption">
                                    Web Visible
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <label class="margin-r-5">Note</label>&nbsp;&nbsp;<a href="">[Search]</a>
                        <br />
                        @Html.TextAreaFor(x => x.Entity.Note, new { @id = "txtNote", @class = "form-control", })
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <a href="@Url.Action("Refresh")" class="btn btn-default">Cancel</a>
            @if (Model.Entity.ID > 0)
            {
                <button id="btnDelete" type="button" class="btn btn-danger">
                    Delete
                </button>
            }
            <button type="submit" class="btn btn-info float-right">Save</button>
        </div>
    </div>
}

@if (Model.Entity.ID > 0)
{
    <div class="card">
        <div id="section-dependent-data" class="card-header p-2">
            <ul id="list-dependent-data" class="nav nav-pills">
                <li id="tab_selector_citation" data-ggtools-action="Citation" data-ggtools-value="_List" class="nav-item"><a class="nav-link active" href="#tab_content_citations" data-toggle="tab">Citations</a></li>
                <li id="tab_selector_taxonomy_common_name" data-ggtools-action="CommonName" data-ggtools-value="_List" class="nav-item"><a class="nav-link" href="#tab_content_taxonomy_common_name" data-toggle="tab">Common Names</a></li>
                <li id="tab_selector_taxonomy_species_synonym_map" class="nav-item"><a class="nav-link" href="#tab_content_taxonomy_species_synonym_map" data-toggle="tab">Synonyms</a></li>
                <li id="tab_selector_taxonomy_geography_map" class="nav-item"><a class="nav-link" href="#tab_content_taxonomy_geography_map" data-toggle="tab">Distributions</a></li>
                <li id="tab_selector_taxonomy_regulation_map" class="nav-item"><a class="nav-link" href="#tab_content_taxonomy_regulation_map" data-toggle="tab">Regulations</a></li>
            </ul>
        </div>
        <div class="card-body">
            <div class="tab-content">
                <div class="tab-pane active" id="tab_content_citation">
                </div>
                <div class="tab-pane" id="tab_content_taxonomy_common_name">
                </div>
                <div class="tab-pane" id="tab_content_taxonomy_species_synonym_map">
                </div>
                <div class="tab-pane" id="tab_content_taxonomy_geography_map">
                </div>
                <div class="tab-pane" id="tab_content_taxonomy_regulation_map">
                </div>
            </div>
        </div>
    </div>
}

@Html.Partial("~/Views/Taxonomy/Genus/Modals/_Lookup.cshtml")
@Html.Partial("~/Views/Taxonomy/Species/Modals/_Lookup.cshtml")
@Html.Partial("~/Views/Taxonomy/Author/Modals/_Lookup.cshtml")
@Html.Partial("~/Views/Taxonomy/Species/Modals/_LookupProtologue.cshtml")
@Html.Partial("~/Views/Shared/Modals/_NoteLookup2.cshtml")
@Html.Partial("~/Views/Taxonomy/Shared/Modals/_Delete.cshtml")
@{Html.RenderAction("RenderLookupModal", "Citation", new { isMultiSelect = "Y" }); }
@{Html.RenderAction("_Edit", "Folder"); }

<script type="text/javascript">
    $(document).ready(function () {
        Init();
    });

    function Init() {
        SetControlVisibility();
        var defaultId = $('ul#list-dependent-data li:first').attr("id");
        LoadDependentData(defaultId);
    }

    $(document).on("click", "[id*='btnSetVerified']", function () {
        var link = '@Url.Action("SetVerificationStatus","Species")';
        var value = $(this).data("ggtools-value");
        SetVerifiedStatus(value);
    });

    function SetVerifiedStatus(statusCode) {
        var link = '@Url.Action("SetVerificationStatus","Species")';
        var entityId = $("#Entity_ID").val();
        var formData = new FormData();

        formData.append("speciesId", entityId);
        formData.append("statusCode", statusCode);

        $("#Entity_IsVerified").val(statusCode);

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#section-verification").html(response);
            },
            error: function () {
                alert("Error");
            }
        });
    }

    $('#section-dependent-data ul.nav li').on('click', function () {
        var selectedId = $(this).attr('id');
        var action =  $(this).data("ggtools-action");
        var value = $(this).data("ggtools-value");

        //DEBUG
        alert("ACTION " + action + " VALUE " + value);

        LoadDependentData(selectedId);
    });

    function LoadDependentData(sectionId) {
        var link = "";
        var entityId = $("#Entity_ID").val();
        var genusId = $("#Entity_GenusID").val();
        var genusName = $("#Entity_Name").val();
        var formData = new FormData();
        var sectionData = sectionId.replace("tab_selector", "tab_content");
        
        // Load data in selected section content area based on id.
        switch (sectionId) {
            case "tab_selector_citation":
                link = '@Url.Action("_List","Citation", new { speciesId = "SPECIES_ID" })';
                break;
            case "tab_selector_taxonomy_common_name":
                link = '@Url.Action("_List","CommonName", new { speciesId = "SPECIES_ID" })';
                break;
            case "tab_selector_taxonomy_species_synonym_map":
                link = '@Url.Action("_List", "SpeciesSynonymMap", new { speciesId = "SPECIES_ID" })';
                break;
            case "tab_selector_taxonomy_geography_map":
                link = '@Url.Action("_List", "GeographyMap", new { speciesId = "SPECIES_ID" })';
                break;
            case "tab_selector_taxonomy_regulation_map":
                link = '@Url.Action("_List", "RegulationMap", new { speciesId = "SPECIES_ID" })';
                break;
            default:
                // code block
        }

        link = link.replace("SPECIES_ID", entityId);
        formData.append("SpeciesID", entityId);

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#" + sectionData).html(response);
            }
        });
    }
</script>
