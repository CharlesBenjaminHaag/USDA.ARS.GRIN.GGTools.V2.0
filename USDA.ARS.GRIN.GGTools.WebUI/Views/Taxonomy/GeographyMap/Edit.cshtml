@model USDA.ARS.GRIN.GGTools.Taxonomy.ViewModelLayer.GeographyMapViewModel
@{
    ViewBag.Title = Model.PageTitle;
    Layout = "~/Views/Shared/_LayoutAdminLTE3.cshtml";
}

@using (Html.BeginForm("Edit", "GeographyMap", FormMethod.Post, new { id = "frmEdit" }))
{
    @Html.HiddenFor(x => x.TableName)
    @Html.HiddenFor(x => x.TableCode)
    @Html.HiddenFor(x => x.EventAction)
    @Html.HiddenFor(x => x.EventValue)
    @Html.HiddenFor(x => x.Entity.ID)
    @Html.HiddenFor(x => x.Entity.CitationID)
    @Html.HiddenFor(x => x.Entity.CreatedByCooperatorID)
    @Html.HiddenFor(x => x.Entity.ModifiedByCooperatorID)
    @Html.Partial("~/Views/Shared/_RevisionHistory.cshtml")

    <div class="card card-default">
        <div class="card-header">
            <div class="btn-group">
                <button type="button" class="btn btn-default btn-sm pull-right" data-toggle="modal" data-target="#modal-note-lookup">
                    <i class="fa fa-search margin-r-5"></i>
                    Notes
                </button>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Species</label>
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.Entity.SpeciesName, new { @class = "form-control", @readonly = "readonly" })
                            @Html.HiddenFor(x => x.Entity.SpeciesID)
                            <span class="input-group-btn">
                                <button type="button" data-toggle="modal" data-target="#modal-species-lookup" class="btn btn-default btn-flat">
                                    <i class="fa fa-search"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Geography</label>
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.Entity.GeographyDescription, new { @class = "form-control", @readonly = "readonly" })
                            @Html.HiddenFor(x => x.Entity.GeographyID)
                            <span class="input-group-btn">
                                <button type="button" data-toggle="modal" data-target="#modal-geography-lookup" class="btn btn-default btn-flat">
                                    <i class="fa fa-search"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group form-horizontal">
                        <label>Geography Status</label>
                        @Html.DropDownListFor(x => x.Entity.GeographyStatusCode, Model.GeographyStatusCodes, "All Statuses", new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group form-horizontal">
                        <label>Country</label>
                        @Html.DropDownListFor(x => x.Entity.CountryCode, Model.Countries, "All countries", new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label>Note</label>
                        @Html.TextAreaFor(x => x.Entity.Note, new { @id = "txtNote", @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label>Citation</label>
                        <div class="input-group">
                            @Html.HiddenFor(x => x.Entity.CitationID)
                            @Html.TextBoxFor(x => x.Entity.CitationText, new { @class = "form-control", @readonly = "readonly" })
                            <span class="input-group-btn">
                                <button type="button" class="btn btn-default btn-flat" data-toggle="modal" data-target="#modal-citation-lookup">
                                    <i class="fa fa-search"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <a href="@Url.Action("Refresh")" class="btn btn-warning">Cancel</a>
            @if (Model.Entity.ID > 0)
            {
                <button id="btnDelete" type="button" class="btn btn-danger">
                    Delete
                </button>
            }
            <button type="submit" class="btn btn-primary float-right">Save</button>
        </div>
    </div>
}
@Html.Partial("~/Views/Taxonomy/Species/Modals/_Lookup.cshtml")
@Html.Partial("~/Views/Shared/Modals/_NoteLookup2.cshtml")
@Html.Partial("~/Views/Taxonomy/Shared/Modals/_Delete.cshtml")
@{Html.RenderAction("RenderLookupModal", "Citation"); }
@{Html.RenderAction("RenderLookupModal", "Geography"); }

<script type="text/javascript">
    $(document).ready(function () {
        /*InitializeCKEditor();*/
    });

    /*
    * ===================================================================================================
    * SPECIES MODAL
    * ===================================================================================================
    */

    $(document).on("click", "[id='btnLookupSpecies']", function () {
        var link = '@Url.Action("Lookup","Species")';
        SearchSpecies(link);
    });

    $(document).on("click", "[id='btnSaveSpecies']", function () {
        SaveSpecies();
    });

    function SaveSpecies() {
        var selectedItemIdList = GetSelectedEntityIDs("data-table-species-lookup");
        var selectedSpeciesNameList = GetSelectedEntityLabels("data-table-species-lookup");
        $("#Entity_SpeciesID").val(selectedItemIdList);
        $("#Entity_SpeciesName").val(selectedSpeciesNameList);
    }

    /*
    * ===================================================================================================
    * CITATION MODAL
    * ===================================================================================================
    */

    $(document).on("click", "[id='btnLookupCitations']", function () {
        var link = '@Url.Action("Lookup","Citation")';
        LookupCitations(link);
    });

    $(document).on("click", "[id='btnSaveCitations']", function () {
        var entityId = $("#Entity_ID").val();
        var link = '@Url.Action("AddReference","Citation")';
        var refreshLink = '@Url.Action("Edit","GeographyMap")' + '?entityId=' + entityId;
        SaveCitations(link, refreshLink);
    });

    $(document).on("click", "[id='btnDeleteCitations']", function () {
        var entityId = $("#Entity_ID").val();
        var link = '@Url.Action("DeleteReference","Citation")';
        var refreshLink = '@Url.Action("Edit","GeographyMap")' + '?entityId=' + entityId;
        DeleteCitations(link, refreshLink);
    });

</script>
