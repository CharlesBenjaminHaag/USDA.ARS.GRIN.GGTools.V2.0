@model USDA.ARS.GRIN.GGTools.Taxonomy.ViewModelLayer.GeographyViewModel
@{
    ViewBag.Title = Model.PageTitle;
    Layout = "~/Views/Shared/_LayoutAdminLTE3.cshtml";
}
@Html.Partial("~/Views/Shared/_RevisionHistory.cshtml")
@using (Html.BeginForm("Edit", "Geography", FormMethod.Post, new { id = "frmEdit" }))
{
    @Html.HiddenFor(x => x.PageTitle)
    @Html.HiddenFor(x => x.EventAction)
    @Html.HiddenFor(x => x.EventValue)
    @Html.HiddenFor(x => x.TableName)
    @Html.HiddenFor(x => x.TableCode)
    @Html.HiddenFor(x => x.Entity.ID)
    <div class="card card-default">
        <div class="card-header">
            @if (Model.Entity.ID > 0)
            {
                <div class="btn-group">
                    <a href="@Url.Action("Add", "GeographyMap", new { geographyId = Model.Entity.ID })" , class="btn btn-default btn-sm pull-right">
                        <i class="fa fa-plus margin-r-5"></i>
                        Map
                    </a>
                </div>
            }
            <div class="btn-group">
                <button type="button" class="btn btn-default btn-sm pull-right" data-toggle="modal" data-target="#modal-note-lookup">
                    <i class="fa fa-search margin-r-5"></i>
                    Notes
                </button>
            </div>
        </div>
        <div class="card-body">
            @Html.Partial("~/Views/Shared/_ValidationMessages.cshtml")
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Country</label>
                        @Html.DropDownListFor(x => x.Entity.CountryCode, Model.Countries, "Select code", new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label>Adm 1</label>
                        @Html.TextBoxFor(x => x.Entity.Admin1, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label>Adm 1 Abbrev</label>
                        @Html.TextBoxFor(x => x.Entity.Admin1Abbrev, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Adm 1 Type</label>
                        @Html.DropDownListFor(x => x.Entity.Admin1TypeCode, Model.Admin1Types, "Select type code", new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label>Adm 2</label>
                        @Html.TextBoxFor(x => x.Entity.Admin2, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    <div class="form-group">
                        <label>Adm 2 Abbrev</label>
                        @Html.TextBoxFor(x => x.Entity.Admin2Abbrev, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Adm 2 Type</label>
                        @Html.DropDownListFor(x => x.Entity.Admin2TypeCode, Model.Admin2Types, "Select type code", new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group clearfix" style="margin-top:40px;">
                        <div class="icheck-primary d-inline">
                            @Html.CheckBoxFor(x => x.Entity.IsValidOption, new { @id = "cbxIsValidOption" })
                            <label for="cbxIsValidOption">
                                Valid
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12" style="margin-top:1.0em;">
                    <label>Note</label>
                    @Html.TextAreaFor(x => x.Entity.Note, new { @id = "txtNote", @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="card-footer">
            <a href="@Url.Action("Refresh")" class="btn btn-danger">Cancel</a>
            <button type="submit" class="btn btn-default float-right">Save</button>
        </div>
    </div>
}

<!--
**********************************************************************************
MODALS
**********************************************************************************
-->
@Html.Partial("~/Views/Shared/Modals/_NoteLookup.cshtml")

<script>
    $(document).ready(function () {
        Init();
        InitializeCKEditor();
    });

    function Init() {
        $(".cwr-map-options").hide();
    }

   /*
   * ===================================================================================================
   * SPECIES LOOKUP MODAL (MAP MODE)
   * ===================================================================================================
   */
    $("#btnLookupSpecies").click(function () {
        SearchSpecies();
    });

    function SearchSpecies() {
        var link = '@Url.Action("Lookup","Species")';
        var speciesName = $("#txtLookupSpeciesName").val();
        var formData = new FormData();

        formData.append("SpeciesName", speciesName);
        if ($("#cbxLookupIsAcceptedName").is(":checked")) {
            formData.append("IsAcceptedName", "Y");
        }
        formData.append("IsMultiSelect", "Y");

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#section-species-lookup-search-results").html(response);
                $(".cwr-map-options").show();
            },
            error: function () {
                alert("Error");
            }
        });
    }

    $("#btnGenerateMaps").click(function () {
        var link = '@Url.Action("Map", "Geography")';
        var entityId = $("#Entity_ID").val();
        var selectedItemIdList = GetSelectedSpecies();
        var formData = new FormData();

        formData.append("ID", entityId);
        if (typeof selectedItemIdList != 'undefined') {
            formData.append("IDList", selectedItemIdList);
        }

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#modal-species-lookup").modal("hide");
                $("#frmEdit").submit();
            },
            error: function () {
                alert("Error");
            }
        });
    });

    function GetSelectedSpecies() {
        var table = $('#data-table-species-lookup').DataTable();
        var ids = $.map(table.rows('.selected').data(), function (item) {
            return item[0]
        });
        console.log(ids)
        return ids;
    }

    /*
    * ===================================================================================================
    * NOTE LOOKUP MODAL
    * ===================================================================================================
    */

    $("#btnLookupNote").click(function () {
        SearchNotes();
    });

    function SearchNotes() {
        var link = '@Url.Action("Lookup","Note")';
        var tableName = $("#TableName").val();
        var noteText = $("#txtLookupNote").val();

        var formData = new FormData();

        formData.append("TableName", tableName);
        formData.append("Note", noteText);

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#section-lookup-note-search-results").html(response);
            },
            error: function () {
                alert("Error");
            }
        });
    }

    $(document).on("click", ".note-selector", function () {
        $('#modal-note-lookup').modal('hide');
        var selectedNote = $(this).val();
        CKEDITOR.instances["txtNote"].setData(selectedNote);
    });

    /*
    * ===================================================================================================
    * CKEDITOR
    * ===================================================================================================
    */
    function InitializeCKEditor() {
        const editor = CKEDITOR.replace('txtNote', {
            width: '100%',
            height: 100,
            enterMode: CKEDITOR.ENTER_BR
        }
        );

        //editor.addCommand("searchNotes", {
        //    exec(edt) {
        //        OpenNoteLookupModal();
        //    }
        //});

        editor.config.coreStyles_italic = { element: 'i', overrides: 'em' };

        editor.ui.addButton('SuperButton', {
            label: "Search taxon record notes.",
            command: 'searchNotes',
            toolbar: 'insert',
            height: 80,
            width: 100,
            icon: 'https://cdn-icons.flaticon.com/png/128/3031/premium/3031293.png?token=exp=1643047176~hmac=8e60d1aebf934f53fda6eb320d1ffedc'
        });
    }
</script>
