@model USDA.ARS.GRIN.GGTools.Taxonomy.ViewModelLayer.CitationViewModel
<div id="modal-citation-lookup" class="modal fade" style="display: none;" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Citation Lookup</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="card">
                    <div class="card-header p-2">
                        <ul id="list-tab_citations" class="nav nav-pills">
                            <li class="nav-item"><a id="link-tab-citations-taxon" class="nav-link active" href="#taxon-citations" data-toggle="tab">Select Taxon Citation</a></li>
                            <li class="nav-item"><a id="link-tab-citations-search" class="nav-link" href="#search-citations" data-toggle="tab">Search</a></li>
                            <li class="nav-item"><a id="link-tab-citations-add" class="nav-link" href="#add-citation" data-toggle="tab">Add</a></li>
                        </ul>
                    </div>
                    <div class="card-body">
                        <div class="tab-content">
                            <div class="tab-pane active" id="taxon-citations">
                                @Html.Partial("~/Views/Taxonomy/Citation/Modals/_SelectListTaxon.cshtml")                          
                            </div>
                            <div class="tab-pane" id="search-citations">
                                <div id="section-search-criteria">
                                    <div class="row">
                                        <div class="col-md-2">
                                            <div id="form-group">
                                                <label id="lblStandardAbbreviation">Lit. Type</label>
                                                @Html.DropDownListFor(x => x.SearchEntity.LiteratureTypeCode, Model.LiteratureTypes, "All types", new { @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div id="form-group">
                                                <label id="lblStandardAbbreviation">Standard Abbreviation</label>
                                                @Html.DropDownListFor(x => x.SearchEntity.StandardAbbreviation, Model.StandardAbbreviations, "All sources", new { @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div id="form-group">
                                                <label>Abbreviation</label>
                                                @Html.TextBoxFor(x => x.SearchEntity.Abbreviation, new { @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div id="form-group">
                                                <label>Citation Title</label>
                                                @Html.TextBoxFor(x => x.SearchEntity.CitationTitle, new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div id="form-group">
                                                <label>Editor/Author</label>
                                                @Html.TextBoxFor(x => x.SearchEntity.EditorAuthorName, new { @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-md-1">
                                            <div id="form-group">
                                                <label>Cit. Year</label>
                                                @Html.TextBoxFor(x => x.SearchEntity.CitationYear, new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                    <br />
                                    <div class="row margin-top-05em">
                                        <div class="col-md-12">
                                            <button id="btnReset" type="button" class="btn btn-warning">Reset</button>
                                            <button id="btnLookupCitations" type="button" class="btn btn-default float-right">Search</button>
                                        </div>
                                    </div>
                                    <div id="section-citation-lookup-search-results">
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane" id="add-citation">
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Literature</label>
                                            <div class="input-group">
                                                @Html.TextBoxFor(x => x.Entity.Abbreviation, new { @class = "form-control", @readonly = "readonly", @style = "background-color:#ecf0f5;" })
                                                @Html.HiddenFor(x => x.Entity.LiteratureID)
                                                <span class="input-group-btn">
                                                    <button type="button" class="btn btn-default btn-flat" data-toggle="modal" data-target="#modal-literature-lookup">
                                                        <i class="fa fa-search"></i>
                                                    </button>
                                                </span>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-md-4">
                                        <div id="form-group">
                                            <label>Citation Title</label>
                                            @Html.TextBoxFor(x => x.Entity.CitationTitle, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div id="form-group">
                                            <label>Author</label>
                                            @Html.TextBoxFor(x => x.Entity.CitationAuthorName, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <div id="form-group">
                                            <label>Cit. Year</label>
                                            @Html.TextBoxFor(x => x.Entity.CitationYear, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-2">
                                        <div id="form-group">
                                            <label>Vol. and Page</label>
                                            @Html.TextBoxFor(x => x.Entity.VolumeOrPage, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div id="form-group">
                                            <label>DOI Reference</label>
                                            @Html.TextBoxFor(x => x.Entity.DOIReference, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <label>Note</label>
                                        @Html.TextAreaFor(x => x.Entity.Note, new { @id = "txtCitationNote", @class = "form-control" })
                                    </div>
                                </div>
                                <br />
                                <button id="btnSaveNewCitation" type="button" class="btn btn-info float-right" data-dismiss="modal">Save New Citation</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
@{Html.RenderAction("RenderLookupModal", "Literature"); }
<script type="text/javascript">

    $(document).on("click", "[id='btnLookupCitations']", function () {
        var link = '@Url.Action("Lookup","Citation")';
        LookupCitations(link);
    });

    $(document).on("click", "[id='btnSaveSelectedCitation']", function () {
        GetSelectedCitation("data_table_lookup_citations");
    });

    $(document).on("click", "[id='btnSaveSelectedCitationTop']", function () {
        GetSelectedCitation("data_table_lookup_citations");
    });

    $(document).on("click", "[id='btnSaveSelectedTaxonCitation']", function () {
        GetSelectedCitation("data_table_lookup_taxon_citations");
    });

    $(document).on("click", "[id='btnSaveSelectedTaxonCitationTop']", function () {
        GetSelectedCitation("data_table_lookup_taxon_citations");
    });

    function GetSelectedCitation(dataTableName) {
        var tableName = $("#TableName").val();
        var entityId = $("#Entity_ID").val();
        var selectedItemIdList = GetSelectedEntityIDs(dataTableName);
        var selectedItemLabelList = GetSelectedCitationText(dataTableName);

        // If table is single-cit table, set fields; otherwise, call method. ** Temporary ** until citation
        // table and related tables can be refactored to allow linking from sub-taxon data 
        // (CWR Map, CWR Trait, etc.) via a map table -- vs. a citation ID field within the 
        // sub-taxon table itself.
        if ((tableName == "taxonomy_cwr_map") ||
            (tableName == "taxonomy_cwr_trait") ||
            (tableName == "taxonomy_common_name") ||
            (tableName == "taxonomy_use") ||
            (tableName == "taxonomy_geography_map")) {
            $("#Entity_CitationID").val(selectedItemIdList);
            $("#Entity_CitationText").val(selectedItemLabelList);
        }
        else {
            SaveSelectedCitation(tableName, entityId, selectedItemIdList);
        }
    }

    $(document).on("click", "[id='btnSaveSelectedTaxonCitation']", function () {
        var tableName = $("#TableName").val();
        var entityId = $("#Entity_ID").val();
        var selectedItemIdList = GetSelectedEntityIDs("data_table_lookup_taxon_citations");
        var selectedItemLabelList = GetSelectedEntityLabels("data_table_lookup_taxon_citations");

        // If table is single-cit table, set fields; otherwise, call method. ** Temporary ** until citation
        // table and related tables can be refactored to allow linking from sub-taxon data 
        // (CWR Map, CWR Trait, etc.) via a map table -- vs. a citation ID field within the 
        // sub-taxon table itself.
        if ((tableName == "taxonomy_cwr_map") ||
            (tableName == "taxonomy_cwr_trait") ||
            (tableName == "taxonomy_common_name") ||
            (tableName == "taxonomy_use") ||
            (tableName == "taxonomy_geography_map")) {
            $("#Entity_CitationID").val(selectedItemIdList);
            $("#Entity_CitationText").val(selectedItemLabelList);
        }
        else {
            SaveSelectedCitation(tableName, entityId, selectedItemIdList);
        }
    });

    $(document).on("click", "[id='btnSaveNewCitation']", function () {
        SaveNewCitation();
    });

    function LookupCitations(link) {
        var tableName = $("#TableName").val();
        var literatureTypeCode = $("#SearchEntity_LiteratureTypeCode").val();
        var standardAbbreviation = $("#SearchEntity_StandardAbbreviation").val();
        var abbreviation = $("#SearchEntity_Abbreviation").val();
        var citationTitle = $("#SearchEntity_CitationTitle").val();
        var editorAuthorName = $("#SearchEntity_EditorAuthorName").val();
        var citationYear = $("#SearchEntity_CitationYear").val();
        var formData = new FormData();

        formData.append("TableName", tableName);
        formData.append("LiteratureTypeCode", literatureTypeCode);
        formData.append("StandardAbbreviation", standardAbbreviation);
        formData.append("Abbreviation", abbreviation);
        formData.append("CitationTitle", citationTitle);
        formData.append("EditorAuthorName", editorAuthorName);
        formData.append("CitationYear", citationYear);

        try {
            $.ajax({
                url: link,
                type: 'POST',
                cache: false,
                contentType: false,
                processData: false,
                data: formData,
                success: function (response) {
                    $("#section-citation-lookup-search-results").html(response);
                }
            });
        }
        catch (ex) {

        }
    }

    function SaveSelectedCitation(tableName, entityId, citationId) {
        var link = '@Url.Action("Clone","Citation")';
        var formData = new FormData();

        formData.append("TableName", tableName);
        formData.append("EntityID", entityId);
        formData.append("CitationID", citationId);

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            dataType: 'json',
            contentType: false,
            processData: false,
            data: formData,
            success: function (data) {
                //DEBUG
                alert("DEBUG " + data.citation.ID);
                LoadDependentData("tab_selector_citations");
            },
            error: function (ex) {
            }
        });
    }

    function SaveNewCitation() {
        var link = '@Url.Action("Add","Citation")';
        var formData = new FormData();
        var tableName = $("#TableName").val();
        var entityId = $("#Entity_ID").val();
        var literatureId = $("#Entity_LiteratureID").val();
        var standardAbbreviation = $("#Entity_Abbreviation").val();
        var citationTitle = $("#Entity_CitationTitle").val();
        var editorAuthorName = $("#Entity_EditorAuthorName").val();
        var citationYear = $("#Entity_CitationYear").val();
        var doiReference = $("#Entity_DOIReference").val();
        var volumeOrPage = $("#Entity_VolumeOrPage").val();
        var note = $("#txtCitationNote").val();

        formData.append("TableName", tableName);
        formData.append("EntityID", entityId);
        formData.append("LiteratureID", literatureId);
        formData.append("SpeciesID", entityId);
        formData.append("StandardAbbreviation", standardAbbreviation);
        formData.append("CitationTitle", citationTitle);
        formData.append("EditorAuthorName", editorAuthorName);
        formData.append("CitationYear", citationYear);
        formData.append("DOIReference", doiReference);
        formData.append("VolumeOrPage", volumeOrPage);
        formData.append("Note", note);

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            dataType: 'json',
            contentType: false,
            processData: false,
            data: formData,
            success: function (data) {
                $("#Entity_CitationID").val(data.citation.ID);
                $("#Entity_CitationText").val(data.citation.CitationText);
            },
            error: function (ex) {
            }
        });
}

    function SaveCitations(link, refreshLink) {
    var tableName = $("#TableName").val();
    var entityId = $("#Entity_ID").val();
    var formData = new FormData();
    var selectedItemIdList = GetSelectedEntityIDs("citation-lookup-data-table");

    formData.append("TableName", tableName);
    formData.append("EntityID", entityId);
    formData.append("IDList", selectedItemIdList);

    $.ajax({
        url: link,
        type: 'POST',
        cache: false,
        contentType: false,
        processData: false,
        data: formData,
        success: function (result) {
            $("#modal-citation-search").modal("hide");

            /*window.location.href = refreshLink;*/
        },
        error: function () {

        }
    });
}

    function DeleteCitations(link, refreshLink) {
    var tableName = $("#TableName").val();
    var entityId = $("#Entity_ID").val();
    var formData = new FormData();
    var selectedItemIdList = "0";

    formData.append("TableName", tableName);
    formData.append("EntityID", entityId);
    formData.append("IDList", selectedItemIdList);

    $.ajax({
        url: link,
        type: 'POST',
        cache: false,
        contentType: false,
        processData: false,
        data: formData,
        success: function (result) {
            $("#modal-citation-search").modal("hide");
            window.location.href = refreshLink;
        },
        error: function () {

        }
    });
    }
    
</script>

